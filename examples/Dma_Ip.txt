#include "Mcal.h"
#include "OsIf.h"
#include "Clock_Ip.h"
#include "Dma_Ip.h"
#include "libwtk3.h"

// Initialization
void wtk3_init(void) {
    OsIf_SuspendAllInterrupts();
    OsIf_Init(NULL_PTR);
	Clock_Ip_Init(&Clock_Ip_aClockConfig[0]);
	Dma_Ip_Init(&Dma_Ip_xDmaInitPB);
    OsIf_ResumeAllInterrupts();
}
#define DMA_CH0_BUFFER_DIMENSION (24)
#define MCL_START_SEC_VAR_SHARED_INIT_UNSPECIFIED_NO_CACHEABLE
#include "Mcl_MemMap.h"
    /* DMA Logic Channel 0 Buffers */
    __attribute__(( aligned(32) )) static uint8_t DmaCh0_SourceBuffer[DMA_CH0_BUFFER_DIMENSION] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23};
    __attribute__(( aligned(32) )) static uint8_t DmaCh0_DestinationBuffer[DMA_CH0_BUFFER_DIMENSION];
#define MCL_STOP_SEC_VAR_SHARED_INIT_UNSPECIFIED_NO_CACHEABLE
#include "Mcl_MemMap.h"

int main(void)
{
	wtk3_init();

    Dma_Ip_LogicChannelTransferListType LocList[12];
    uint32_t LocCount = 0;

    LocCount += Dma_Config_Address(&LocList[LocCount], (uint32_t)&DmaCh0_SourceBuffer[0], (uint32_t)&DmaCh0_DestinationBuffer[0]);
    LocCount += Dma_Config_LoopCount(&LocList[LocCount], 4, 3);
    LocCount += Dma_Config_SourceOffset(&LocList[LocCount], 1, 0, DMA_IP_TRANSFER_SIZE_1_BYTE, 0);
    LocCount += Dma_Config_DestinationOffset(&LocList[LocCount], 1, 0, DMA_IP_TRANSFER_SIZE_1_BYTE, 0);

    Dma_Ip_SetLogicChannelTransferList(DMA_LOGIC_CH_0, &LocList[0], LocCount);


    for (uint32_t i = 0; i < 3; ++ i) {
        Dma_Start(DMA_LOGIC_CH_0);
    }

    Dma_WaitDone(DMA_LOGIC_CH_0);

    Breakpoint();
    for (;;)
        ;
}

/** @} */
